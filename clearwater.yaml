heat_template_version: 2013-05-23

description: >
  Clearwater deployment

parameters:
  public_net_id:
    type: string
    description: ID of public network
    constraints:
      - custom_constraint: neutron.network
        description: Must be a valid network ID
  private_net_cidr:
    type: string
    description: Private network address (CIDR notation)
    default: 192.168.0.0/24
  private_net_gateway:
    type: string
    description: Private network gateway address
    default: 192.168.0.254
  availability_zone:
    type: string
    description: The Availability Zone to launch the instance.
  private_net_pool_start:
    type: string
    description: Start of private network IP address pool
    default: 192.168.0.1
  private_net_pool_end:
    type: string
    description: End of private network IP address pool
    default: 192.168.0.253
  external_dns_ip:
    type: string
    description: IP address of external DNS server
    default: 8.8.8.8
  flavor:
    type: string
    description: Flavor to use
    constraints:
      - custom_constraint: nova.flavor
        description: Must be a valid flavor name
  image:
    type: string
    description: Name of image to use
    constraints:
      - custom_constraint: glance.image
        description: Must be a valid image name
  key_name:
    type: string
    description: Name of keypair to assign
    constraints:
      - custom_constraint: nova.keypair
        description: Must be a valid keypair name
  repo_url:
    type: string
    description: URL for Clearwater repository
    default: http://repo.cw-ngv.com/stable
  zone:
    type: string
    description: DNS zone
    default: example.com
  dn_range_start:
    type: string
    description: First directory number in pool
    default: "6505550000"
    constraints:
      - allowed_pattern: "[0-9]+"
        description: Must be numeric
  dn_range_length:
    type: string
    description: Number of directory numbers to add to pool
    default: "1000"
    constraints:
      - allowed_pattern: "[0-9]+"
        description: Must be numeric
  dnssec_key:
    type: string
    description: DNSSEC private key (Base64-encoded)
    constraints:
      - allowed_pattern: "[0-9A-Za-z+/=]+"
        description: Must be Base64-encoded
  bono_cluster_size:
    type: number
    description: Number of Bono nodes in Bono cluster
    default: 1
  sprout_cluster_size:
    type: number
    description: Number of Sprout nodes in Sprout cluster
    default: 1
  homer_cluster_size:
    type: number
    description: Number of Homer nodes in Homer cluster
    default: 1
  homestead_cluster_size:
    type: number
    description: Number of Homestead nodes in Homestead cluster
    default: 1
  ralf_cluster_size:
    type: number
    description: Number of Ralf nodes in Ralf cluster
    default: 1

resources:
  network:
    type: network.yaml
    properties:
      public_net_id: { get_param: public_net_id }
      private_net_name: { str_replace: { params: { __stack__: { get_param: "OS::stack_name" } }, template: __stack__-private } }
      private_net_cidr: { get_param: private_net_cidr }
      private_net_gateway: { get_param: private_net_gateway }
      private_net_pool_start: { get_param: private_net_pool_start }
      private_net_pool_end: { get_param: private_net_pool_end }
      dns_ip: { get_param: external_dns_ip }

  security_groups:
    type: security-groups.yaml
    properties:
      name_prefix: { get_param: "OS::stack_name" }

  dns:
    type: dns.yaml
    properties:
      public_net_id: { get_param: public_net_id }
      private_net_id: { get_attr: [ network, private_net ] }
      flavor: { get_param: flavor }
      image: { get_param: image }
      key_name: { get_param: key_name }
      availability_zone: { get_param: availability_zone}
      dns_security_group: { get_attr: [ security_groups, dns ] }
      zone: { get_param: zone }
      dnssec_key: { get_param: dnssec_key }

  ellis:
    type: ellis.yaml
    properties:
      public_net_id: { get_param: public_net_id }
      private_net_id: { get_attr: [ network, private_net ] }
      flavor: { get_param: flavor }
      image: { get_param: image }
      key_name: { get_param: key_name }
      availability_zone: { get_param: availability_zone}
      base_security_group: { get_attr: [ security_groups, base ] }
      ellis_security_group: { get_attr: [ security_groups, ellis ] }
      repo_url: { get_param: repo_url }
      zone: { get_param: zone }
      dn_range_start: { get_param: dn_range_start }
      dn_range_length: { get_param: dn_range_length }
      dns_ip: { get_attr: [ dns, private_ip ] }
      dnssec_key: { get_param: dnssec_key }

  bono:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: bono_cluster_size }
      index_var: "__index__"
      resource_def:
        type: bono.yaml
        properties:
          public_net_id: { get_param: public_net_id }
          private_net_id: { get_attr: [ network, private_net ] }
          flavor: { get_param: flavor }
          image: { get_param: image }
          key_name: { get_param: key_name }
          availability_zone: { get_param: availability_zone}
          base_security_group: { get_attr: [ security_groups, base ] }
          bono_security_group: { get_attr: [ security_groups, bono ] }
          repo_url: { get_param: repo_url }
          zone: { get_param: zone }
          dns_ip: { get_attr: [ dns, private_ip ] }
          dnssec_key: { get_param: dnssec_key }
          etcd_ip: { get_attr: [ ellis, private_ip ] }
          index: __index__

  sprout:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: sprout_cluster_size }
      index_var: __index__
      resource_def:
        type: sprout.yaml
        properties:
          public_net_id: { get_param: public_net_id }
          private_net_id: { get_attr: [ network, private_net ] }
          flavor: { get_param: flavor }
          image: { get_param: image }
          key_name: { get_param: key_name }
          availability_zone: { get_param: availability_zone}
          base_security_group: { get_attr: [ security_groups, base ] }
          sprout_security_group: { get_attr: [ security_groups, sprout ] }
          sprout2_security_group: { get_attr: [ security_groups, sprout2 ] }
          repo_url: { get_param: repo_url }
          zone: { get_param: zone }
          dns_ip: { get_attr: [ dns, private_ip ] }
          dnssec_key: { get_param: dnssec_key }
          etcd_ip: { get_attr: [ ellis, private_ip ] }
          index: __index__

  homer:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: homer_cluster_size }
      index_var: __index__
      resource_def:
        type: homer.yaml
        properties:
          public_net_id: { get_param: public_net_id }
          private_net_id: { get_attr: [ network, private_net ] }
          flavor: { get_param: flavor }
          image: { get_param: image }
          key_name: { get_param: key_name }
          availability_zone: { get_param: availability_zone}
          base_security_group: { get_attr: [ security_groups, base ] }
          homer_security_group: { get_attr: [ security_groups, homer ] }
          repo_url: { get_param: repo_url }
          zone: { get_param: zone }
          dns_ip: { get_attr: [ dns, private_ip ] }
          dnssec_key: { get_param: dnssec_key }
          etcd_ip: { get_attr: [ ellis, private_ip ] }
          index: __index__

  homestead:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: homestead_cluster_size }
      index_var: __index__
      resource_def:
        type: homestead.yaml
        properties:
          public_net_id: { get_param: public_net_id }
          private_net_id: { get_attr: [ network, private_net ] }
          flavor: { get_param: flavor }
          image: { get_param: image }
          key_name: { get_param: key_name }
          base_security_group: { get_attr: [ security_groups, base ] }
          availability_zone: { get_param: availability_zone}
          homestead_security_group: { get_attr: [ security_groups, homestead ] }
          repo_url: { get_param: repo_url }
          zone: { get_param: zone }
          dns_ip: { get_attr: [ dns, private_ip ] }
          dnssec_key: { get_param: dnssec_key }
          etcd_ip: { get_attr: [ ellis, private_ip ] }
          index: __index__

  ralf:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: ralf_cluster_size }
      index_var: __index__
      resource_def:
        type: ralf.yaml
        properties:
          public_net_id: { get_param: public_net_id }
          private_net_id: { get_attr: [ network, private_net ] }
          flavor: { get_param: flavor }
          image: { get_param: image }
          key_name: { get_param: key_name }
          availability_zone: { get_param: availability_zone}
          base_security_group: { get_attr: [ security_groups, base ] }
          ralf_security_group: { get_attr: [ security_groups, ralf ] }
          repo_url: { get_param: repo_url }
          zone: { get_param: zone }
          dns_ip: { get_attr: [ dns, private_ip ] }
          dnssec_key: { get_param: dnssec_key }
          etcd_ip: { get_attr: [ ellis, private_ip ] }
          index: __index__

outputs:
  zone:
    description: DNS zone
    value: { get_param: zone }
  dnssec_key:
    description: DNS key
    value: { get_param: dnssec_key }
  dns_ip:
    description: IP address of DNS
    value: { get_attr: [ dns, public_ip ] }
  homestead_ip:
    description: IP address of Homestead
    value: { get_attr: [ homestead, public_ip] }
  homer_ip:
    description: IP address of Homer
    value: { get_attr: [ homer, public_ip] }
  bono_ip:
    description: IP address of Bono
    value: { get_attr: [ bono, public_ip] }
  sprout_ip:
    description: IP address of Sprout
    value: { get_attr: [ sprout, public_ip] }
  ellis_ip:
    description: IP address of Ellis
    value: { get_attr: [ ellis, public_ip] }
  ralf_ip:
    description: IP address of Ralf
    value: { get_attr: [ ralf, public_ip] }	
  dns_ip_private:
    description: private IP address of DNS
    value: { get_attr: [ dns, private_ip ] }
  homer_ip_private:
    description: private IP address of Homer
    value: { get_attr: [ homer, private_ip] }
  sprout_ip_private:
    description: private IP address of Sprout
    value: { get_attr: [ sprout, private_ip] }
  ellis_ip_private:
    description: private IP address of Ellis
    value: { get_attr: [ ellis, private_ip ] }
  ralf_ip_private:
    description: private IP address of Ralf
    value: { get_attr: [ ralf, private_ip] }
  homestead_ip_private:
    description: private IP address of Homestead
    value: { get_attr: [ homestead, private_ip] }
  bono_ip_private:
    description: private IP address of Bono
    value: { get_attr: [ bono, private_ip] }