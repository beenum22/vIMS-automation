# Copyright (C) Metaswitch Networks 2016
# If license terms are provided to you in a COPYING file in the root directory
# of the source code repository by which you are accessing this code, then
# the license outlined in that COPYING file applies to your use.
# Otherwise no rights are granted except for those provided to you by
# Metaswitch Networks in a separate written agreement.

heat_template_version: 2013-05-23

description: >
  DNS server exposing dynamic DNS using DNSSEC

parameters:
  public_mgmt_net_id:
    type: string
    description: ID of public management network
    constraints:
      - custom_constraint: neutron.network
        description: Must be a valid network ID
  private_mgmt_net_id:
    type: string
    description: ID of private management network
    constraints:
      - custom_constraint: neutron.network
        description: Must be a valid network ID
  public_sig_net_id:
    type: string
    description: ID of public signaling network
    constraints:
      - custom_constraint: neutron.network
        description: Must be a valid network ID
  private_sig_net_id:
    type: string
    description: ID of private signaling network
    constraints:
      - custom_constraint: neutron.network
        description: Must be a valid network ID
  private_sig_net_cidr:
    type: string
    description: Private signaling network address (CIDR notation)
    default: 192.168.1.0/24
  flavor:
    type: string
    description: Flavor to use
    constraints:
      - custom_constraint: nova.flavor
        description: Must be a valid flavor name
  image:
    type: string
    description: Name of image to use
    constraints:
      - custom_constraint: glance.image
        description: Must be a valid image name
  key_name:
    type: string
    description: Name of keypair to assign
    constraints:
      - custom_constraint: nova.keypair
        description: Must be a valid keypair name
  dns_security_group:
    type: string
    description: ID of security group for DNS nodes
  zone:
    type: string
    description: DNS zone
    default: example.com
  dnssec_key:
    type: string
    description: DNSSEC private key (Base64-encoded)
  dns_virtual_ip_mgmt:
    type: string
    description: Virtual IP address that can be used on different instances
  dns_virtual_ip_sig:
    type: string
    description: Virtual IP address that can be used on different instances
  index:
    type: number
    description: Node count

resources:
  mgmt_port:
    type: OS::Neutron::Port
    properties:
      # Specify the network ID by string to work around OpenStack issues - see https://github.com/Metaswitch/clearwater-heat/issues/18.
      network_id: { str_replace: { params: { x: { get_param: private_mgmt_net_id } }, template: x } }
      allowed_address_pairs:
        - ip_address: { get_param: dns_virtual_ip_mgmt }
      security_groups:
        - { get_param: dns_security_group }

  mgmt_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_mgmt_net_id }
      port_id: { get_resource: mgmt_port }

  sig_port:
    type: OS::Neutron::Port
    properties:
      # Specify the network ID by string to work around OpenStack issues - see https://github.com/Metaswitch/clearwater-heat/issues/18.
      network_id: { str_replace: { params: { x: { get_param: private_sig_net_id } }, template: x } }
      allowed_address_pairs:
        - ip_address: { get_param: dns_virtual_ip_sig }
      security_groups:
        - { get_param: dns_security_group }

  server:
    type: OS::Nova::Server
    properties:
      name: { str_replace: { params: { __index__: { get_param: index }, __zone__: { get_param: zone } }, template: ns-__index__.__zone__ } }
      #name: { str_replace: { params: { __zone__: { get_param: zone } }, template: ns.__zone__ } }
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: mgmt_port }
        - port: { get_resource: sig_port }
      user_data_format: RAW
      user_data:
        str_replace:
          params:
            __zone__: { get_param: zone }
            __dnssec_key__: { get_param: dnssec_key }
            __public_ip__: { get_attr: [ mgmt_floating_ip, floating_ip_address ] }
            __private_sig_ip__: { get_attr: [ sig_port, fixed_ips, 0, ip_address ] }
            __private_sig_cidr__: { get_param: private_sig_net_cidr }
          template: {get_file: config_scripts/dns.sh}

outputs:
  public_mgmt_ip:
    description: IP address in public management network
    value: { get_attr: [ mgmt_floating_ip, floating_ip_address ] }
  private_mgmt_ip:
    description: IP address in private signaling network
    value: { get_attr: [ mgmt_port, fixed_ips, 0, ip_address ] }
  private_sig_ip:
    description: IP address in private signaling network
    value: { get_attr: [ sig_port, fixed_ips, 0, ip_address ] }
  vip_sig:
    description: VIP in private signaling network
    value: { get_attr: [ sig_port, allowed_address_pairs, 0, ip_address ] }
  vip_mgmt:
    description: VIP in private mgmt network
    value: { get_attr: [ mgmt_port, allowed_address_pairs, 0, ip_address ] }
  zone:
    description: DNS zone
    value: { get_param: zone }
  dnssec_key:
    description: DNSSEC private key (Base64-encoded)
    value: { get_param: dnssec_key }
